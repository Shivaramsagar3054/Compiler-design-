#include <stdio.h>
#include <string.h>

#define MAX 10

void eliminateLeftRecursion(char productions[MAX][MAX], int n) {
    for (int i = 0; i < n; i++) {
        char nonTerminal = productions[i][0];
        char alpha[MAX], beta[MAX];
        int alphaIndex = 0, betaIndex = 0;
        int j = 2;
        
        while (productions[i][j] != '|' && productions[i][j] != '\0') {
            if (productions[i][j] == nonTerminal) {
                j++;
                while (productions[i][j] != '|' && productions[i][j] != '\0') {
                    alpha[alphaIndex++] = productions[i][j++];
                }
                alpha[alphaIndex] = '\0';
            } else {
                while (productions[i][j] != '|' && productions[i][j] != '\0') {
                    beta[betaIndex++] = productions[i][j++];
                }
                beta[betaIndex] = '\0';
            }
            if (productions[i][j] == '|') j++;
        }
        
        if (alphaIndex > 0) {
            printf("%c -> %s%c'\n", nonTerminal, beta, nonTerminal);
            printf("%c' -> %s%c' | epsilon\n", nonTerminal, alpha, nonTerminal);
        } else {
            printf("%s\n", productions[i]);
        }
    }
}

int main() {
    int n;
    char productions[MAX][MAX];
    
    printf("Enter the number of productions: ");
    scanf("%d", &n);
    
    printf("Enter the productions (e.g., A=Ab|c):\n");
    for (int i = 0; i < n; i++) {
        scanf("%s", productions[i]);
    }
    
    eliminateLeftRecursion(productions, n);
    
    return 0;
}
